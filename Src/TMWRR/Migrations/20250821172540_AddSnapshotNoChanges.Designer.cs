// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMWRR.Data;

#nullable disable

namespace TMWRR.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250821172540_AddSnapshotNoChanges")]
    partial class AddSnapshotNoChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TMWRR.Entities.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeformattedName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MapUid")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("MapUid");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFCampaign", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TMFCampaigns");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFCampaignScoresRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("DrivenAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("PlayerId")
                        .HasColumnType("varchar(32)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("SnapshotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SnapshotId");

                    b.ToTable("TMFCampaignScoresRecords");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFCampaignScoresSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CampaignId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("NoChanges")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("PublishedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CreatedAt")
                        .IsUnique();

                    b.ToTable("TMFCampaignScoresSnapshots");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFLogin", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TMFLogins");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFCampaignScoresRecord", b =>
                {
                    b.HasOne("TMWRR.Entities.Map", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMWRR.Entities.TMFLogin", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.HasOne("TMWRR.Entities.TMFCampaignScoresSnapshot", "Snapshot")
                        .WithMany("Records")
                        .HasForeignKey("SnapshotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");

                    b.Navigation("Player");

                    b.Navigation("Snapshot");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFCampaignScoresSnapshot", b =>
                {
                    b.HasOne("TMWRR.Entities.TMFCampaign", "Campaign")
                        .WithMany("ScoresSnapshots")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFCampaign", b =>
                {
                    b.Navigation("ScoresSnapshots");
                });

            modelBuilder.Entity("TMWRR.Entities.TMFCampaignScoresSnapshot", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
